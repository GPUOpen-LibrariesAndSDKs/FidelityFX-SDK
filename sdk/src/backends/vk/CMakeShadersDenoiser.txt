# This file is part of the FidelityFX SDK.
# 
# Copyright (c) 2023 Advanced Micro Devices, Inc. All rights reserved.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set(DENOISER_BASE_ARGS
    -reflection -deps=gcc -DFFX_GPU=1)

set(DENOISER_VK_BASE_ARGS
    -compiler=glslang -e CS --target-env vulkan1.1 -S comp -Os -DFFX_GLSL=1)

set(DENOISER_PERMUTATION_ARGS
	-DFFX_DENOISER_OPTION_INVERTED_DEPTH={0,1})

set(DENOISER_INCLUDE_ARGS
	"${FFX_GPU_PATH}"
	"${FFX_GPU_PATH}/denoiser")

file(GLOB DENOISER_SHADERS
    "shaders/denoiser/ffx_denoiser_prepare_shadow_mask_pass.glsl"
    "shaders/denoiser/ffx_denoiser_shadows_tile_classification_pass.glsl"
    "shaders/denoiser/ffx_denoiser_filter_soft_shadows_0_pass.glsl"
    "shaders/denoiser/ffx_denoiser_filter_soft_shadows_1_pass.glsl"
    "shaders/denoiser/ffx_denoiser_filter_soft_shadows_2_pass.glsl"
    "shaders/denoiser/ffx_denoiser_prefilter_reflections_pass.glsl"
    "shaders/denoiser/ffx_denoiser_reproject_reflections_pass.glsl"
    "shaders/denoiser/ffx_denoiser_resolve_temporal_reflections_pass.glsl"
    )

# compile all the shaders
compile_shaders("${FFX_SC_EXECUTABLE}" "${DENOISER_BASE_ARGS}" "${DENOISER_VK_BASE_ARGS}" "${DENOISER_PERMUTATION_ARGS}" "${DENOISER_INCLUDE_ARGS}" "${DENOISER_SHADERS}" DENOISER_PERMUTATION_OUTPUTS)

# add the header files they generate to the main list of dependencies
add_shader_output("${DENOISER_PERMUTATION_OUTPUTS}")
